generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model phone_app_chat {
  id      Int      @id @default(autoincrement())
  channel String   @db.VarChar(20)
  message String   @db.VarChar(255)
  time    DateTime @default(now()) @db.Timestamp(0)
}

model phone_calls {
  id       Int      @id @default(autoincrement())
  owner    String   @db.VarChar(10)
  num      String   @db.VarChar(10)
  incoming Int
  time     DateTime @default(now()) @db.Timestamp(0)
  accepts  Int
}

model phone_messages {
  id          Int      @id @default(autoincrement())
  transmitter String   @db.VarChar(10)
  receiver    String   @db.VarChar(10)
  message     String   @default("0") @db.VarChar(255)
  time        DateTime @default(now()) @db.Timestamp(0)
  isRead      Int      @default(0)
  owner       Int      @default(0)
}

model phone_users_contacts {
  id         Int     @id @default(autoincrement())
  identifier String? @db.VarChar(60)
  number     String? @db.VarChar(10)
  display    String  @default("-1") @db.VarChar(64)
}

model vrp_banco {
  id      Int     @id @default(autoincrement())
  user_id Int?
  extrato String? @db.VarChar(255)
  data    String? @db.VarChar(255)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model vrp_estoque {
  vehicle    String @db.VarChar(100)
  quantidade Int

  @@ignore
}

model vrp_experience {
  user_id  Int @id
  backpack Int @default(6)

  @@index([user_id], map: "user_id")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model vrp_homes {
  owner   Int
  user_id Int
  garage  Int
  home    String @default("") @db.VarChar(100)
  tax     String @default("") @db.VarChar(24)

  @@ignore
}

model vrp_priority {
  user_id  Int     @id @default(0)
  steam    String? @db.VarChar(50)
  priority Int     @default(0)

  @@index([priority], map: "priority")
  @@index([steam], map: "steam")
}

model vrp_srv_data {
  dkey   String  @id @db.VarChar(100)
  dvalue String? @db.Text
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model vrp_trust {
  ownerId      Int?
  permissionId Int?
  vehicle      String? @db.VarChar(100)

  @@index([ownerId], map: "ownerId")
  @@index([permissionId], map: "permissionId")
  @@ignore
}

model vrp_user_data {
  user_id   Int
  dkey      String    @db.VarChar(100)
  dvalue    String?   @db.Text
  vrp_users vrp_users @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "fk_user_data_users")

  @@id([user_id, dkey])
}

model vrp_user_identifiers {
  identifier String     @id @db.VarChar(100)
  user_id    Int?
  vrp_users  vrp_users? @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "fk_user_ids_users")

  @@index([user_id], map: "fk_user_ids_users")
}

model vrp_user_identities {
  user_id      Int       @id
  name         String?   @db.VarChar(50)
  secondname   String?   @db.VarChar(50)
  registration String?   @db.VarChar(20)
  phone        String?   @db.VarChar(20)
  age          Int?
  vrp_users    vrp_users @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "fk_user_identities_users")

  @@index([phone], map: "phone")
  @@index([registration], map: "registration")
}

model vrp_user_moneys {
  user_id   Int       @id
  wallet    Int?
  bank      Int?
  vrp_users vrp_users @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "fk_user_moneys_users")
}

model vrp_user_vehicles {
  user_id   Int
  vehicle   String    @db.VarChar(100)
  detido    Int       @default(0)
  time      String    @default("0") @db.VarChar(24)
  engine    Int       @default(1000)
  body      Int       @default(1000)
  fuel      Int       @default(100)
  ipva      String?   @db.VarChar(50)
  vrp_users vrp_users @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "fk_user_vehicles_users")

  @@id([user_id, vehicle])
}

model vrp_users {
  id                   Int                    @id @default(autoincrement())
  whitelisted          Boolean?
  banned               Boolean?
  ip                   String                 @default("0.0.0") @db.VarChar(255)
  last_login           String                 @default("0.0.0") @db.VarChar(255)
  garagem              Int?                   @default(2)
  groups               String?                @db.Text
  vrp_user_data        vrp_user_data[]
  vrp_user_identifiers vrp_user_identifiers[]
  vrp_user_identities  vrp_user_identities?
  vrp_user_moneys      vrp_user_moneys?
  vrp_user_vehicles    vrp_user_vehicles[]
}
